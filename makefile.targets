#parser
PCOMP = g++
PCOMPFLAGS = -std=c++11 -g -MMD -I"../src/expressions" -I"../src/statements" -I"../src" -I"./"

parser: parser.tab.o

parser-clean: lexer-clean
	rm -rf parser.tab.* parser.output

parser.tab.c parser.tab.h: ../src/parser.y
	bison -vd ../src/parser.y

parser.tab.o: parser.tab.c parser.tab.h lexer.o
	$(PCOMP) $(PCOMPFLAGS) -w -c parser.tab.c

lexer.o: lexer.c parser.tab.h
	$(PCOMP) $(PCOMPFLAGS) -c lexer.c
	
lexer-clean:
	rm -rf lexer.*

lexer.c: ../src/lexer.l
	flex ../src/lexer.l

#Tests
TEST_PATH = ../tests/
#ref: http://stackoverflow.com/a/2706067/577298
TEST_FILES = $(wildcard $(TEST_PATH)*.nwt)
TESTS = $(patsubst $(TEST_PATH)%.nwt,%,$(TEST_FILES))

test: newt $(TESTS)

$(TEST_PATH)output:
	mkdir -p $(TEST_PATH)output

%: $(TEST_PATH)%.nwt $(TEST_PATH)output
	-@echo ' '
	./newt --debug $< >$(TEST_PATH)output/$@ 2>&1
	diff $(TEST_PATH)reference/$@ $(TEST_PATH)output/$@

#run a test in debug mode
r%: $(TEST_PATH)%.nwt
	-@echo ' '
	./newt --debug $<

#update the reference output for the given test
w%: $(TEST_PATH)%.nwt $(TEST_PATH)reference
	-@echo ' '
	./newt --debug $< >$(TEST_PATH)reference/$* 2>&1

#compare test w/ reference output (requires kdiff)
d%: $(TEST_PATH)%.nwt $(TEST_PATH)reference
	kdiff3 $(TEST_PATH)reference/$* $(TEST_PATH)output/$* 

test-clean:
	rm -rf $(TEST_PATH)output/*
